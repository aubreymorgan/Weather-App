<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx/fHx8f/x4eHlQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhISEvHx8f/x8fH90AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgICCyHx8f/x8fH/8fHx//Hx8f/x8fH7cqKioGAAAAAAAAAAAAAAAAHx8f/x8fH/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgeR8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8f
        H/8fHx//Hx8fuwAAAAAAAAAAHx8f/x8fH/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfHx/ZHx8f/x8fH/8eHh6fAAAAAAAAAAAAAAAAAAAAAB4eHp8fHx//Hx8f/x8fH/UAAAAAHx8f/x8f
        H/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIKEfHx//Hx8f/wAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADHx8f/x8fH/8eHh6YHx8f/x8fH/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAICAgEB8fH/8fHx//AAAABAAAAAAAAAAAHx8f5B8fH/8fHx//Hx8f5AAAAAAAAAAAAAAABB8f
        H/8fHx//Hx8f/x8fH/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHx8f9x8fH/8fHx+bAAAAAAAA
        AAAfHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8AAAAAAAAAAB8fH5sfHx//Hx8f/x8fH/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEHx8f/x8fH/8AAAAAAAAAAB8fH+AfHx//Hx8fvwAAAAAAAAAAHx8fvx8f
        H/8fHx/gAAAAAAAAAAAfHx//Hx8f/x8fH/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHh6oHx8f/x8f
        H/8AAAAAAAAAAB8fH/8fHx//AAAAAAAAAAAAAAAAAAAAAB8fH/8fHx//AAAAAAAAAAAfHx//Hx8f/x8f
        H/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx//Hx8f/x8fH/8AAAAAAAAAAB8fH/8fHx//AAAAAAAA
        AAAAAAAAAAAAAB8fH/8fHx//AAAAAAAAAAAfHx//Hx8f/x4eHqkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfHx//Hx8f/x8fH/8AAAAAAAAAAB8fH+QfHx//Hx8fvwAAAAAAAAAAHx8fvx8fH/8fHx/kAAAAAAAA
        AAAfHx//Hx8f/wAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx//Hx8f/x8fH/8eHh6fAAAAAAAA
        AAAfHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8AAAAAAAAAAB4eHp8fHx//Hx8f9wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfHx//Hx8f/x8fH/8fHx//AAAAAwAAAAAAAAAAHx8f4B8fH/8fHx//Hx8f4AAA
        AAAAAAAAAAAAAx8fH/8fHx//ICAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx//Hx8f/x8f
        H54fHx//Hx8f/wAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHx8f/x8fH/8fHx+cAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx//Hx8f/wAAAAAfHx/vHx8f/x8fH/8fHx+bAAAAAAAA
        AAAAAAAAAAAAAB8fH5sfHx//Hx8f/x8fH9MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfHx//Hx8f/wAAAAAAAAAAHx8fxR8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8fjAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx//Hx8f/wAAAAAAAAAAAAAAACoq
        KgYfHx+zHx8f/x8fH/8fHx//Hx8f/x4eHrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeHh7cHx8f/yEhIS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHx9BHx8f/x8f
        H94AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP//xwD//8cA/4DnAP4AZwD8PCcA+H4HAPDD
        BwDxgYcA4xjHAOM8xwDjPMcA4xjHAOGBjwDgww8A4H4fAOQ8PwDmAH8A5wH/AOP//wDj//8A////AP//
        /wA=
</value>
  </data>
</root>